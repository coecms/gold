!********+*********+*********+*********+*********+*********+*********+*
!*   This file determines the adjustable run-time parameters for the  *
!* Generalized Ocean Layer Dynamics (GOLD) ocean model.  Where        *
!* appropriate, MKS units are used.                                   *
!********+*********+*********+*********+*********+*********+*********+*
! >>> double_gyre test case <<<

!  Specify properties of the physical domain.
GRID_CONFIG = "spherical"       !    Method for defining horizontal grid
                                !  = file|cartesian|spherical|mercator
                                !  file - read grid from file "GRID_FILE"
                                !  cartesian - a Cartesian grid
                                !  spherical - a spherical grid
                                !  mercator  - a mercator grid
TOPO_CONFIG = "spoon"           !    Method for defining topography
                                !  file - read topographic information from file
                                !  (TOPO_FILE).
                                !  flat - flat bottom set to MAXIMUM_DEPTH.
                                !  bowl - bowl like basin using MAXIMUM_DEPTH and
                                !  MINIMUM_DEPTH.
                                !  spoon - similar to bowl except that southern
                                !  face of the "bowl" is open.
                                !  DOME - sill-overflow test case basin.
                                !  USER - user defined
MAXIMUM_DEPTH = 2000.0          !    The maximum depth of the ocean in m.
MINIMUM_DEPTH = 1.0             !    The minimum ocean depth, in m. Anything
                                !  shallower than this depth is assumed to be on
                                !  land, and all fluxes are masked out.
COORD_CONFIG = "gprime"         !    How layers are to be defined:
                                !  file - read coordinate information from file
                                !  (COORD_FILE).
                                !  ts_ref - use reference temperature
                                !  and salinity (T_REF and S_REF) to determine
                                !  surface density and GINT calculate internal
                                !  densities.
                                !  gprime - use reference density (RHO_0) for
                                !  surface density and GINT calculate internal
                                !  densities.
                                !  ts_profile - use profiles of temperature
                                !  and salinity (read from COORD_FILE) to determine
                                !  surface density and internal densities.
                                !  USER - user defined routine
GFS = 0.980                     !    The reduced gravity at the free
                                !  surface, in m s-2.
GINT = 9.8e-3                   !    The nominal reduced gravity of the internal
                                !  interfaces for idealized models, in m s-2.
THICKNESS_CONFIG = "uniform"    !  Method for defining initial layer thicknesses
                                !  file - read thickness information from file
                                !  (THICKNESS_FILE).
                                !  uniform - thickness is distributed uniformly
                                !  and equally between layers.
                                !  search - thickness determined by search
                                !  through initial temperature and salinity space
                                !  of a fixed coordinate data set (not yet
                                !  implemented)
                                !  USER - user defined

!  Specify the numerical domain.
NXTOT = 44                      !    NXTOT and NYTOT are the number of thickness
NYTOT = 40                      !  grid points in the zonal and meridional
                                !  directions of the physical domain.
NZ = 2                          !    The number of layers.
NXHALO = 4                      !    NXHALO and NYHALO are the number of halo
NYHALO = 4                      !  points on each side in the x- and y-directions.
                                !  If static memory allocation is used, these
                                !  must match the values of NX_HALO and NY_HALO
                                !  in GOLD_memory.h.
NXPROC_IO = 1                   !    The number of processors used for I/O in the
                                !  x-direction, or 0 to equal NXPROC.  NXPROC_IO
                                !  must be a factor of NXPROC.
NYPROC_IO = 1                   !    The number of processors used for I/O in the
                                !  y-direction, or 0 to equal NYPROC.  NYPROC_IO
                                !  must be a factor of NYPROC.

!  The following parameters only apply if the grid is internally generated.
LENLAT = 20.0                   !    The length of the domain in units defined
LENLON = 22.0                   !  defined by AXIS_UNITS; by default the units
                                !  are degrees of latitude and longitude.
SOUTHLAT = 30.0                 !  The domain's southern latitude.
WESTLON = 0.0                   !  The domain's western longitude.
REENTRANT_X = False             !    If defined, the domain is zonally reentrant.

DEBUG = False                   !    If true, write out verbose debugging data.
SEND_LOG_TO_STDOUT = False      !    If true write out log information to stdout.

!  Specify the time integration scheme.
DT_FORCING = 2400.0             !    The time step for changing forcing or
                                !  writing certain diagnostics, in s.
DT_THERM = 2400.0               !    The thermodynamic time step, in s.  DT_THERM
                                !  should be an integer multiple of DT and less
                                !  than or equal to DT_FORCING.
DT = 1200.0                     !    The (baroclinic) dynamics time step, in s.
                                !  DT should be an integer fraction of DT_FORCING.
DTBT = -0.9                     !    The barotropic time step, in s. DTBT is only
                                !  used with the split explicit time stepping.
                                !  To set the time step automatically based
                                !  the maximum stable value use 0, or a negative
                                !  value gives the fraction of the stable value.
                                !  The value of DTBT that will actually be used
                                !  is an integer fraction of DT, rounding down.
DT_BT_FILTER = -0.25            !    A time-scale for filtering BT variables,
                                !  in s if positive, or as a fraction of DT if
                                !  negative.
DTBT_RESET_PERIOD = -1.0        !    The period between recalculations of DTBT
                                !  of DTBT (if DTBT <= 0), in seconds.  If
                                !  DTBT_RESET_PERIOD is negative, DTBT is set
                                !  based only on information available at
                                !  initialization.  If dynamic, DTBT will be set
                                !  at least every forcing time step, and if 0,
                                !  every dynamics time step.
BE = 0.6                        !    BE determines whether the neutral baroclinic
                                !  time stepping scheme (0.5) or a backward Euler
                                !  scheme (1) is used.  BE may be from 0.5 to 1,
                                !  but instability may occur near 0.5.
BEBT = 0.2                      !    BEBT determines whether the barotropic time
                                !  stepping uses the forward-backward time-
                                !  stepping scheme or a backward Euler scheme.
                                !  BEBT is valid in the range from 0 (for a
                                !  forward-backward treatment of nonrotating
                                !  gravity waves) to 1 (for a backward Euler
                                !  treatment). In practice, BEBT must be greater
                                !  than about 0.05.
ETA_TOLERANCE = 1e-12           !    The tolerance, in m, for the differences
                                !  between the barotropic and baroclinic
                                !  estimates of the sea surface height due to
                                !  the fluxes through each face.  The total
                                !  tolerance for SSH is 4 times this value.  The
                                !  default is 0.5*NZ*EPSILON, and this should not
                                !  be set less than about 10^-15*MAXIMUM_DEPTH.

!  Specify properties of the I/O and length of the integration.
DAYMAX = 50.0                   !    The final day of the simulation.
ENERGYSAVEDAYS = 1.0            !    The number of days between saves of the
                                !  energies of the run.
ENERGYFILE = "timestats"        !    The file to use to save the energies.
READ_DEPTH_LIST = True          !    If true, write out the depth list file.
DEPTH_LIST_MIN_INC = 1e-6       !   The minimum depth increment in m between
                                !  elements of the depth list file.
DEPTH_LIST_FILE = "Depth_list.nc" ! The name of the depth list file.
RESTARTFILE = "GOLD.res"        !    The name of the restart file.
RESTINT = 110.0                 !    The number of days between saves of the
                                !  restart file.  Use a value that is larger than
                                !  DAYMAX not to save incremental restart files
                                !  within a run.  Use 0 not to save restart files
                                !  at all.
RESTART_CONTROL = 3             !    RESTART_CONTROL determines which restart
                                !  files are written - Add 2 (bit 1) for a time-
                                !  stamped restart file, and odd (bit 0) for a
                                !  non-time-stamped file.  A restart will be
                                !  saved at the end of the run segment for any
                                !  non-negative value.
ALWAYS_WRITE_GEOM = False       !    If ALWAYS_WRITE_GEOM is defined, the
                                !  ocean_geometry file is written anew with each
                                !  run segment.  Otherwise it is only written for
                                !  a new run.  The default is defined.

INPUTDIR = "INPUT"              !    INPUTDIR is a directory in which NetCDF
                                !  input files might be found.

!  Specify the horizontal (along-isopycnal) viscosity.
LAPLACIAN = True                !    LAPLACIAN is defined to use a Laplacian
                                !  horizontal viscosity.
BIHARMONIC = False              !    BIHARMONIC is defined to use a biharmonic
                                !  horizontal viscosity.  BIHARMONIC may be used
                                !  with LAPLACIAN, and it is automatically
                                !  defined if LAPLACIAN is undefined.
KH = 1.0e4                      !    The Laplacian horizontal viscosity, in
                                !  m2 s-1.  KH is used if LAPLACIAN is defined.
KH_VEL_SCALE = 0.003            !    The velocity scale which is multiplied by
                                !  the grid spacing to calculate the Laplacian
                                !  viscosity ,if LAPLACIAN is defined, in m s-1.
                                !  The final viscosity is the largest of this
                                !  scaled viscosity, the Smagorinsky viscosity
                                !  and KH.
AH_VEL_SCALE = 0.003            !    The velocity scale which is multiplied by
                                !  the cube of the grid spacing to calculate the
                                !  biharmonic viscosity if BIHARMONIC is defined,
                                !  in units of m s-1. The final viscosity is
                                !  the largest of this scaled viscosity, the
                                !  Smagorinsky viscosity and AH.
SMAGORINSKY_KH = True           !    If defined, use Smagorinsky's nonlinear eddy
                                !  viscosity.  KH is the background.
SMAG_LAP_CONST = 0.15           !    The nondimensional Laplacian Smagorinsky
                                !  constant.  Often 0.15.
SMAGORINSKY_AH = False          !    If defined, use a biharmonic form of
                                !  Smagorinsky's nonlinear eddy viscosity.
SMAG_BI_CONST = 0.032           !    The nondimensional biharmonic Smagorinsky
                                !  constant.  Often 0.015.

!  Specify the scheme for the Coriolis and momentum advection terms.
BOUND_CORIOLIS = True           !    If BOUND_CORIOLIS is defined, the Coriolis
                                !  terms at u points are bounded by the four
                                !  estimates of (f+rv)v from the four neighboring
                                !  v points, and similarly at v points. This
                                !  option would have no effect on the SADOURNY
                                !  scheme if it were possible to use centered
                                !  difference thickness fluxes.  In addition, if
                                !  SMAGORINSKY_AH is used, the biharmonic
                                !  viscosity is modified to include a term that
                                !  scales quadratically with the velocity
                                !  shears.

!  Specify the scheme for the vertical viscosity.
HARMONIC_VISC = True            !    If defined, use the harmonic mean thickness
                                !  for calculating the vertical viscosity.

!  Specify the scheme for the barotropic solver.
FLUX_BT_COUPLING = False        !    If defined, use mass fluxes to ensure
                                !  consistency between the baroclinic and
                                !  barotropic modes.
USE_BT_CONT_TYPE = True         !    If defined, use a structure with elements
                                ! that describe effective face areas from the
                                ! summed layer continuity solvers as a function
                                ! the barotropic flow in coupling between the
                                ! barotropic and baroclinic flow.
BT_USE_LAYER_FLUXES = True      !   If true, linearize the continuity equation
                                ! in the barotropic solver about the layer
                                ! fluxes.  This may require USE_BT_CONT_TYPE and
                                ! BT_THICK_SCHEME FROM_BT_CONT to work properly.
BOUND_BT_CORRECTION = True      !    If defined, the corrective pseudo mass-
                                !  fluxes into the barotropic solver are limited
                                !  to values that require less than 0.1*MAXVEL to
                                !  be accommodated.
BT_PROJECT_VELOCITY = True      !    If true, project the velocity forward in
                                !  time, simplifying the barotropic algorithm.
BT_THICK_SCHEME = "FROM_BT_CONT" ! A string describing the scheme that is used
                                ! to set the open face areas used for barotropic
                                ! transport and the relative weights of the layer
                                ! accelerations. Valid values are:
                                ! ARITHMETIC - arithmetic mean layer thicknesses
                                ! HARMONIC - harmonic mean layer thicknesses
                                ! HYBRID (the default) - use arithmetic means for
                                !    layers above the shallowest bottom, the
                                !    harmonic mean for layers below, and a weighted
                                !    average for layers that straddle that depth
                                ! FROM_BT_CONT - use the average thicknesses kept
                                !    it the h_u and h_v fields of BT_cont_type.

!  Specify the properties of the active tracers and Eqn of state.
ENABLE_THERMODYNAMICS = False   !    Temperature and salinity are used as state
                                !  variables if ENABLE_THERMODYNAMICS is defined.
RHO_0 = 1035.0                  !    RHO_0 is used in the Boussinesq
                                !  approximation to calculations of pressure and
                                !  pressure gradients, in units of kg m-3.

!  Specify the properties of the diapycnal viscosity and diffusion.
ADIABATIC = True                !    There are no diapycnal mass fluxes if
                                !  ADIABATIC is defined. This assumes that
                                !  KD = KDML = 0.0 and that there is no buoyancy
                                !  forcing, but makes the model faster by
                                ! eliminating subroutine calls.


HMIX = 20.0                     !    The depth of the assumed mixed layer for
                                !  distribution of wind forcing, in m.  If
                                !  BULKMIXEDLAYER is defined, the buoyancy fluxes
                                !  are scaled away when the total depth is less
                                !  than HMIX/2.
KVML = 1.00e-2                  !    The kinematic viscosity in the mixed layer,
                                !  in m2 s-1.  A typical value is ~1e-2 m2 s-1.
                                !  KVML is not used if BULKMIXEDLAYER is defined.
DIRECT_STRESS = True            !    If DIRECT_STRESS is defined, the wind stress
                                !  is distributed over the topmost HMIX of fluid,
                                !  and KVML may be set to a very small value.

KV = 1.00e-4                    !    The kinematic viscosity in the interior, in
                                !  m2 s-1.  The molecular value, ~1e-6 m2 s-1,
                                !  may be used.

HBBL = 10.0                     !    The thickness in m of a bottom boundary
                                !  layer with a viscosity of KVBBL if
                                !  BOTTOMDRAGLAW is not defined, or the thickness
                                !  over which near-bottom velocities are averaged
                                !  for the drag law if BOTTOMDRAGLAW is defined
                                !  but LINEAR_DRAG is not.
BOTTOMDRAGLAW = True            !    If BOTTOMDRAGLAW is defined, the bottom
                                !  stress is calculated with a drag law
                                !  c_drag*|u|*u. The velocity magnitude may be an
                                !  assumed value or it may be based on the actual
                                !  velocity in the bottommost HBBL, depending on
                                !  LINEAR_DRAG.
CDRAG = 0.003                   !    CDRAG is the drag coefficient relating the
                                !  magnitude of the velocity field to the bottom
                                !  stress. CDRAG is only used if BOTTOMDRAGLAW is
                                !  defined.
LINEAR_DRAG = True              !    If LINEAR_DRAG and BOTTOMDRAGLAW are defined
                                !  the drag law is cdrag*DRAG_BG_VEL*u.
DRAG_BG_VEL = 0.10              !    DRAG_BG_VEL is either the assumed bottom
                                !  velocity (with LINEAR_DRAG) or an unresolved
                                !  velocity that is combined with the resolved
                                !  velocity to estimate the velocity magnitude,
                                !  in m s-1.  DRAG_BG_VEL is only used when
                                !  BOTTOMDRAGLAW is defined.
BBL_THICK_MIN = 0.1             !    The minimum bottom boundary layer thickness,
                                !  in m, that can be used with BOTTOMDRAGLAW.
                                !  This might be Kv / (cdrag * drag_bg_vel) to
                                !  give Kv as the minimum near-bottom viscosity.

!  Specify properties of the surface forcing.
VARIABLE_BUOYFORCE = False      !    If VARIABLE_BUOYFORCE is defined the surface
                                !  fluxes of buoyancy or heat and fresh water
                                !  are recalculated every coupling time step.
BUOY_CONFIG = "zero"            !    Method for determining buoyancy forcing
                                !  (can be file, zero or USER).

VARIABLE_WINDS = False          !    If the wind stresses vary with time, define
                                !  VARIABLE_WINDS, which will cause wind_forcing
                                !  to be calculated every coupling timestep.
WIND_CONFIG = "2gyre"           !    Method for forcing winds (can be zero,
                                !  2gyre, file or USER).
RESTOREBUOY = False             !    If RESTOREBUOY is defined, the buoyancy
                                !  fluxes drive the model back toward some
                                !  specified state with a rate given by
                                !  FLUXCONST.

! Specify a few miscellaneous limits.
MAXVEL = 6.0                    !    This is the maximum velocity allowed before
                                !  the velocity is truncated, in units of m s-1.
